{"version":3,"sources":["state/userSlice.js","state/store.js","components/Form.js","components/Navbar.js","components/NavigationButton.js","assets/verificationImg.png","components/Identification.js","assets/main-logo-round.svg","components/Start.js","assets/page2.png","components/RadioButtonsGroup.js","components/textQuestions.js","components/Covid.js","assets/advicesImage.svg","components/Advices.js","assets/doctor2.png","components/Vaccination.js","components/Final.js","components/Result.js","App.js","index.js"],"names":["userSlice","createSlice","name","initialState","personalInfo","covidInfo","opinions","reducers","addUser","state","action","payload","addCovidInfo","addVaccinationInfo","vaccinationInfo","actions","configureStore","reducer","user","userReducer","validations","required","value","message","minLength","maxLength","pattern","surname","mail","validate","isValidMail","test","isValidRedberryMail","Form","handleButtonState","onSubmit","useForm","mode","register","handleSubmit","reset","formState","errors","isValid","useSelector","useEffect","id","className","Navbar","text","pages","prototypes","string","NavigationButton","disabled","direction","path","formId","form","type","to","Identification","useState","setDisabled","dispatch","useDispatch","push","useHistory","data","src","peopleImg","alt","Start","roundLogo","RadioButtonsGroup","question","registerName","answers","map","answer","htmlFor","questions","covid","ifYes","vaccination","ifNo","advices","onlineMeetups","workInOffice","physicalMeetups","currentOpinion","requiredValidation","antiBodies","date","number","AntiBodies","yes","registerNames","placeholder","Covid","watch","decideButtonState","hadCovid","antisxeulebi","page2Image","Advices","advicesImage","style","fontFamily","console","log","autoComplete","Vaccination","isVaccinated","vaccinationStage","whatAreUWaiting","href","marginTop","marginLeft","doctorImg","Final","dictionary","antibodiesDate","Result","Object","keys","item","field","index","App","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.02bb2dac.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    personalInfo: {},\n    covidInfo: {},\n    opinions: {},\n  },\n  reducers: {\n    addUser: (state, action) => {\n      return {\n        ...state,\n        personalInfo: action.payload,\n      };\n    },\n    addCovidInfo: (state, action) => {\n      return {\n        ...state,\n        covidInfo: action.payload,\n      };\n    },\n    addVaccinationInfo: (state, action) => {\n      return {\n        ...state,\n        vaccinationInfo: action.payload,\n      };\n    },\n  },\n});\n\nexport const { addUser, addCovidInfo, addVaccinationInfo } = userSlice.actions;\n\nexport default userSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport userReducer from \"./userSlice\";\n\nexport default configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n","import { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useSelector } from \"react-redux\";\n\nconst validations = {\n  name: {\n    required: {\n      value: true,\n      message: \"სახელის ველი სავალდებულოა \",\n    },\n    minLength: {\n      value: 3,\n      message: \"სახელის ველი უნდა შედგებოდეს მინიმუმ 3 სიმბოლოსგან\",\n    },\n    maxLength: {\n      value: 255,\n      message: \"სახელის ველი უნდა შედგებოდეს მაქსიმუმ 255 სიმბოლოსგან\",\n    },\n    pattern: {\n      value: /^[A-Za-zა-ჰ]+$/,\n      message:\n        \"სახელის ველი უნდა შეიცავდეს მხოლოდ ალფაბეტის სიმბოლოებს(ა-ჰ, a-z, A-Z)\",\n    },\n  },\n  surname: {\n    required: {\n      value: true,\n      message: \"გვარის ველი სავალდებულოა\",\n    },\n    minLength: {\n      value: 3,\n      message: \"გვარის ველი უნდა შედგებოდეს მინიმუმ 3 სიმბოლოსგან\",\n    },\n    maxLength: {\n      value: 255,\n      message: \"გვარის ველი უნდა შედგებოდეს მაქსიმუმ 255 სიმბოლოსგან\",\n    },\n    pattern: {\n      value: /^[A-Za-zა-ჰ]+$/,\n      message:\n        \" სახელის ველი უნდა შეიცავდეს მხოლოდ ალფაბეტის სიმბოლოებს(ა-ჰ, a-z, A-Z)\",\n    },\n  },\n  mail: {\n    required: {\n      value: true,\n      message: \"მეილის ველი სავალდებულოა\",\n    },\n    validate: {\n      isValidMail: value =>\n        /^\\S+@\\S+\\.\\S+$/.test(value) || \"თქვენს მიერ შეყვანილი მეილი არასწორია\",\n\n      isValidRedberryMail: value =>\n        /^[A-Za-z0-9._%+-]+@redberry.ge$/.test(value) ||\n        \"გთხოვთ დარეგისტრირდეთ რედბერის მეილით(youremail@redberry.ge)\",\n    },\n  },\n};\n\nexport default function Form({ handleButtonState, onSubmit }) {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors, isValid },\n  } = useForm({ mode: \"onChange\" });\n\n  const personalInfo = useSelector(state => state.user.personalInfo);\n\n  useEffect(() => {\n    reset(personalInfo);\n  }, [reset, personalInfo]);\n\n  useEffect(() => {\n    handleButtonState(isValid);\n  });\n\n  return (\n    <div>\n      <form\n        id=\"identificationForm\"\n        onSubmit={handleSubmit(onSubmit)}\n        className=\"identificationForm\"\n      >\n        <div className=\"inputParentDiv\">\n          <label>სახელი*</label>\n          <input {...register(\"name\", validations?.name)} />\n\n          {errors.name && (\n            <span className=\"errorNotif\">{errors.name.message}</span>\n          )}\n        </div>\n        <div className=\"inputParentDiv\">\n          <label>გვარი*</label>\n          <input {...register(\"surname\", validations?.surname)} />\n          {errors.surname && (\n            <span className=\"errorNotif\">{errors?.surname?.message}</span>\n          )}\n        </div>\n        <div className=\"inputParentDiv\">\n          <label>მეილი*</label>\n          <input {...register(\"mail\", validations.mail)}></input>\n          {errors.mail && (\n            <span className=\"errorNotif\">{errors?.mail?.message}</span>\n          )}\n        </div>\n      </form>\n      <div className=\"requiredText\">\n        <p>*-ით მონიშნული ველების შევსება სავალდებულოა</p>\n      </div>\n    </div>\n  );\n}\n","import { string } from \"prop-types\";\nimport React from \"react\";\n\nfunction Navbar({ text, pages }) {\n  return (\n    <div className=\"headerNav\">\n      <span>{text}</span>\n      <span>{pages}</span>\n    </div>\n  );\n}\n\nexport default Navbar;\n\nNavbar.prototypes = {\n  text: string,\n  pages: string,\n};\n","import React from \"react\";\nimport { bool, oneOf } from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nfunction NavigationButton({\n  disabled,\n  direction,\n  path,\n  formId = \"identificationForm\",\n}) {\n  if (disabled) {\n    return (\n      <button\n        form={formId}\n        type=\"submit\"\n        value=\">\"\n        className=\"identificationSubmit disabled\"\n      >\n        <i\n          className={\n            direction === \"right\"\n              ? \"arrowBtnRight\"\n              : direction === \"left\"\n              ? \"arrowBtnLeft\"\n              : \"\"\n          }\n        ></i>\n      </button>\n    );\n  }\n  return direction === \"left\" ? (\n    <Link to={path}>\n      <button className=\"identificationSubmit\">\n        <i\n          className={\n            direction === \"right\"\n              ? \"arrowBtnRight\"\n              : direction === \"left\"\n              ? \"arrowBtnLeft\"\n              : \"\"\n          }\n        ></i>\n      </button>\n    </Link>\n  ) : (\n    <button form={formId} type=\"submit\" className=\"identificationSubmit\">\n      <i\n        className={\n          direction === \"right\"\n            ? \"arrowBtnRight\"\n            : direction === \"left\"\n            ? \"arrowBtnLeft\"\n            : \"\"\n        }\n      ></i>\n    </button>\n  );\n}\n\nexport default NavigationButton;\n\nNavigationButton.propTypes = {\n  disabled: bool,\n  direction: oneOf([\"left\", \"right\"]),\n};\n","export default __webpack_public_path__ + \"static/media/verificationImg.d3b88496.png\";","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Form from \"./Form\";\nimport Navbar from \"./Navbar\";\nimport NavigationButton from \"./NavigationButton\";\nimport peopleImg from \"../assets/verificationImg.png\";\nimport { addUser } from \"../state/userSlice\";\n\nexport default function Identification() {\n  const [disabled, setDisabled] = useState(true);\n\n  const decideButtonState = isValid => {\n    if (isValid) {\n      setDisabled(false);\n    } else {\n      setDisabled(true);\n    }\n  };\n\n  const dispatch = useDispatch();\n  const { push } = useHistory();\n\n  const onSubmit = (data, isValid) => {\n    if (isValid) {\n      dispatch(addUser(data));\n      push(\"/questions\");\n    }\n  };\n\n  return (\n    <div className=\"identificationParent\">\n      <Navbar text=\"REDBERRY\" pages=\"1/4\" />\n      <div className=\"identification\">\n        <Form handleButtonState={decideButtonState} onSubmit={onSubmit} />\n        <img src={peopleImg} alt=\"people\" className=\"peopleImg\"></img>\n      </div>\n      <NavigationButton disabled={disabled} direction=\"right\" />\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/main-logo-round.e5f2a04a.svg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport roundLogo from \"../assets/main-logo-round.svg\";\n\nfunction Start() {\n  return (\n    <div className=\"logoParent\">\n      <img className=\"mainLogo\" src={roundLogo} alt=\"\" />\n      <div className=\"slide-bottom\">\n        <Link to=\"identification\">\n          <button>კითხვარის დაწყება</button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Start;\n","export default __webpack_public_path__ + \"static/media/page2.eedb86af.png\";","import React from \"react\";\nimport { object } from \"prop-types\";\n\nfunction RadioButtonsGroup({ question, register, registerName, validations }) {\n  return (\n    <div>\n      <p>{question.question}</p>\n      {question.answers.map((answer) => {\n        return (\n          <div className=\"radioItem\" key={answer}>\n            <input\n              {...register(registerName, validations)}\n              type=\"radio\"\n              value={answer}\n            />\n            <label htmlFor={answer}>{answer}</label>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default RadioButtonsGroup;\n\nRadioButtonsGroup.propTypes = {\n  questions: object,\n};\n","const questions = {\n  covid: {\n    question: \"გაქვს გადატანილი Covid-19?*\",\n    answers: [\"კი\", \"არა\", \"ახლა მაქვს\"],\n    ifYes: {\n      question: \"ანტისხეულების ტესტი გაქვს გაკეთებული?*\",\n      answers: [\"კი\", \"არა\"],\n    },\n  },\n  vaccination: {\n    question: \"უკვე გაკეთებული გაქვს ვაქცინა?*\",\n    answers: [\"კი\", \"არა\"],\n    ifYes: {\n      question: \"აირჩიე რა ეტაპზე ხარ*\",\n      answers: [\n        \"პირველი დოზა და დარეგისტრირებული ვარ მეორეზე\",\n        \"სრულად აცრილი ვარ\",\n        \"პირველი დოზა და არ დავრეგისტრირებულვარ მეორეზე\",\n      ],\n    },\n    ifNo: {\n      question: \"რას ელოდები?*\",\n      answers: [\n        \"დარეგისტრირებული ვარ და ველოდები თარიღს\",\n        \"არ ვგეგმავ\",\n        \"გადატანილი მაქვს და ვგეგმავ აცრას\",\n      ],\n    },\n  },\n  advices: {\n    onlineMeetups: {\n      question:\n        \"რა სიხშირით შეიძლება გვქონდეს საერთო არაფორმალური ონლაინ შეხვედრები, სადაც ყველა სურვილისამებრ ჩაერთვება*\",\n      answers: [\n        \"კვირაში ორჯერ\",\n        \"კვირაში ერთხელ\",\n        \"ორ კვირაში ერთხელ\",\n        \"თვეში ერთხელ\",\n      ],\n    },\n    workInOffice: {\n      question: \"კვირაში რადენი დღე ისურვებდი ოფისიდან მუშაობას?*\",\n      answers: [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"],\n    },\n    physicalMeetups: {\n      question: \"რას ფიქრობ ფიზიკურ შეკრებებზე?\",\n    },\n    currentOpinion: {\n      question:\n        \"რას ფიქრობ არსებულ გარემოზე: რა მოგწონს, რას დაამატებდი, რას შეცვლიდი?\",\n    },\n  },\n};\n\nexport default questions;\n","import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router\";\nimport { useSelector } from \"react-redux\";\n\nimport page2Image from \"../assets/page2.png\";\nimport Navbar from \"./Navbar\";\nimport NavigationButton from \"./NavigationButton\";\nimport RadioButtonsGroup from \"./RadioButtonsGroup\";\nimport questions from \"./textQuestions\";\nimport { addCovidInfo } from \"../state/userSlice\";\nimport { useDispatch } from \"react-redux\";\n\nexport const validations = {\n  requiredValidation: {\n    required: {\n      value: true,\n      message: \"ველის შევსება სავალდებულოა \",\n    },\n  },\n  antiBodies: {\n    date: {\n      required: {\n        value: true,\n        message: \"ველის შევსება სავალდებულოა \",\n      },\n    },\n    number: {\n      required: {\n        value: true,\n        message: \"ველის შევსება სავალდებულოა \",\n      },\n      pattern: {\n        value: /^\\d+$/,\n        message: \"გთხოვთ, ჩაწეროთ მხოლოდ ციფრები\",\n      },\n    },\n  },\n};\n\nfunction AntiBodies({\n  yes,\n  question,\n  register,\n  registerNames,\n  validations,\n  errors,\n}) {\n  return (\n    <div>\n      <p>{question}</p>\n      <input type=\"date\" {...register(registerNames.date, validations.date)} />\n      <div>\n        {errors[registerNames.date] && (\n          <span className=\"errorNotif\">\n            {errors[registerNames.date].message}\n          </span>\n        )}\n      </div>\n      {yes ? (\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"ანტისხეულების რაოდენობა\"\n            {...register(registerNames.number, validations.number)}\n          />\n          <div>\n            {errors[registerNames.number] && (\n              <span className=\"errorNotif\">\n                {errors[registerNames.number].message}\n              </span>\n            )}\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nfunction Covid() {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    reset,\n    formState: { errors, isValid },\n  } = useForm({ mode: \"onChange\" });\n\n  const covidInfo = useSelector(state => state.user.covidInfo);\n\n  useEffect(() => {\n    reset(covidInfo);\n  }, [reset, covidInfo]);\n\n  const [disabled, setDisabled] = useState(true);\n\n  const decideButtonState = isValid => {\n    if (isValid) {\n      setDisabled(false);\n    } else {\n      setDisabled(true);\n    }\n  };\n\n  useEffect(() => {\n    decideButtonState(isValid);\n  }, [errors, isValid]);\n\n  const dispatch = useDispatch();\n  const { push } = useHistory();\n\n  const onSubmit = (data, isValid) => {\n    if (isValid) {\n      dispatch(addCovidInfo(data));\n      push(\"/vaccination\");\n    }\n  };\n\n  useEffect(() => {\n    decideButtonState(isValid);\n  }, [errors, isValid]);\n\n  const hadCovid = watch(\"hadCovid\");\n  const antisxeulebi = watch(\"antisxeulebi\");\n\n  return (\n    <div className=\"identificationParent covidQuestions\">\n      <Navbar text=\"COVID\" pages=\"2/4\" />\n      <div className=\"identification covidIdentification\">\n        <form onSubmit={handleSubmit(onSubmit)} id=\"covidForm\">\n          <RadioButtonsGroup\n            question={questions.covid}\n            register={register}\n            registerName=\"hadCovid\"\n            validations={validations.requiredValidation}\n          />\n          {errors.hadCovid && (\n            <span className=\"errorNotif\">{errors.hadCovid.message}</span>\n          )}\n          {hadCovid === \"კი\" && (\n            <RadioButtonsGroup\n              question={questions.covid.ifYes}\n              register={register}\n              registerName=\"antisxeulebi\"\n              validations={validations.requiredValidation}\n            />\n          )}\n          {errors.antisxeulebi && (\n            <span className=\"errorNotif\">{errors.antisxeulebi.message}</span>\n          )}\n          {antisxeulebi === \"კი\" && hadCovid === \"კი\" ? (\n            <AntiBodies\n              yes={true}\n              question=\"თუ გახსოვს, გთხოვ მიუთითე მიახლოებითი თარიღი და რაოდენობა ანტისხეულების*\"\n              register={register}\n              registerNames={{\n                date: \"antibodiesDate\",\n                number: \"antiBodies\",\n              }}\n              validations={validations.antiBodies}\n              errors={errors}\n            />\n          ) : antisxeulebi === \"არა\" && hadCovid === \"კი\" ? (\n            <AntiBodies\n              yes={false}\n              question=\"მიუთითე მიახლოებითი პერიოდი (დღე/თვე/წელი), როდის გქონდა კოვიდ19\"\n              register={register}\n              registerNames={{ date: \"covidDate\" }}\n              validations={validations.antiBodies}\n              errors={errors}\n            />\n          ) : (\n            \"\"\n          )}\n        </form>\n        <img\n          src={page2Image}\n          className=\"page2Image\"\n          alt=\"A man with temperature\"\n        ></img>\n      </div>\n      <div className=\"buttonsParent\">\n        <NavigationButton\n          direction=\"left\"\n          disabled={false}\n          path=\"/identification\"\n        />\n        <NavigationButton\n          direction=\"right\"\n          disabled={disabled}\n          formId=\"covidForm\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Covid;\n","export default __webpack_public_path__ + \"static/media/advicesImage.a38d5b72.svg\";","import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router\";\n\nimport advicesImage from \"../assets/advicesImage.svg\";\nimport Navbar from \"./Navbar\";\nimport NavigationButton from \"./NavigationButton\";\nimport RadioButtonsGroup from \"./RadioButtonsGroup\";\nimport questions from \"./textQuestions\";\nimport { addVaccinationInfo } from \"../state/userSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { validations } from \"./Covid\";\n\nfunction Advices() {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors, isValid },\n  } = useForm({ mode: \"onChange\" });\n\n  const [disabled, setDisabled] = useState(true);\n\n  const decideButtonState = isValid => {\n    if (isValid) {\n      setDisabled(false);\n    } else {\n      setDisabled(true);\n    }\n  };\n\n  useEffect(() => {\n    decideButtonState(isValid);\n  }, [errors, isValid]);\n\n  const dispatch = useDispatch();\n  const { push } = useHistory();\n\n  useEffect(() => {\n    decideButtonState(isValid);\n  }, [errors, isValid]);\n\n  const onSubmit = (data, isValid) => {\n    console.log(data);\n    if (isValid) {\n      dispatch(addVaccinationInfo(data));\n      push(\"/final\");\n    }\n  };\n  return (\n    <div className=\"identificationParent covidQuestions\" id=\"advicesParent\">\n      <Navbar text=\"COVID\" pages=\"4/4\" />\n\n      <div className=\"advicesDiv\">\n        <img\n          src={advicesImage}\n          className=\"page2Image\"\n          alt=\"Man riding bike\"\n        ></img>\n        <div className=\"advicesFormParent\">\n          <p style={{ fontFamily: \"sans-serif\" }}>\n            რედბერის მთავარი ღირებულება ჩვენი გუნდის თითოეული წევრია. გარემო,\n            რომელსაც ჩვენი თანამშრომლები ქმნით ბევრისთვის არის და ყოფილა წლების\n            განმავლობაში ერთად მიზნებისთვის ბრძოლის მიზეზი, ბევრისთვის კი -\n            ჩვენთან გადმოსვლის. პანდემიის პერიოდში ერთმანეთსაც იშვიათად\n            ვნახულობთ პირისპირ და ყოველდღიური კომუნიკაციაც გაიშვიათდა.\n          </p>\n          <form\n            onSubmit={handleSubmit(onSubmit)}\n            id=\"advicesForm\"\n            autoComplete=\"on\"\n          >\n            <RadioButtonsGroup\n              question={questions.advices.onlineMeetups}\n              register={register}\n              registerName=\"onlineMeetups\"\n              validations={validations.requiredValidation}\n            />\n            {errors.onlineMeetups && (\n              <span className=\"errorNotif\">{errors.onlineMeetups.message}</span>\n            )}\n            <RadioButtonsGroup\n              question={questions.advices.workInOffice}\n              register={register}\n              registerName=\"workInOffice\"\n              validations={validations.requiredValidation}\n            />\n            {errors.workInOffice && (\n              <span className=\"errorNotif\">{errors.workInOffice.message}</span>\n            )}\n            <div className=\"textAreaParent\">\n              <p>{questions.advices.physicalMeetups.question}</p>\n              <textarea {...register(\"physicalMeetups\")}></textarea>\n            </div>\n            <div className=\"textAreaParent\">\n              <p>{questions.advices.currentOpinion.question}</p>\n              <div className=\"parentOfLastTextarea\">\n                <textarea {...register(\"currentOpinion\")}></textarea>\n                <button className={disabled ? \"disabled\" : \"\"}>\n                  დასრულება\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n      <div className=\"buttonsParent\">\n        <NavigationButton\n          direction=\"left\"\n          disabled={false}\n          path=\"/vaccination\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Advices;\n","export default __webpack_public_path__ + \"static/media/doctor2.78321199.png\";","import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router\";\nimport { useSelector } from \"react-redux\";\n\nimport doctorImg from \"../assets/doctor2.png\";\nimport Navbar from \"./Navbar\";\nimport NavigationButton from \"./NavigationButton\";\nimport RadioButtonsGroup from \"./RadioButtonsGroup\";\nimport questions from \"./textQuestions\";\nimport { addVaccinationInfo } from \"../state/userSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { validations } from \"./Covid\";\n\nfunction Vaccination() {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    reset,\n    formState: { errors, isValid },\n  } = useForm({ mode: \"onChange\" });\n\n  const [disabled, setDisabled] = useState(true);\n\n  const decideButtonState = isValid => {\n    if (isValid) {\n      setDisabled(false);\n    } else {\n      setDisabled(true);\n    }\n  };\n\n  useEffect(() => {\n    decideButtonState(isValid);\n  }, [errors, isValid]);\n\n  const dispatch = useDispatch();\n  const { push } = useHistory();\n\n  const vaccinationInfo = useSelector(state => state.user.vaccinationInfo);\n\n  useEffect(() => {\n    reset(vaccinationInfo);\n  }, [reset, vaccinationInfo]);\n\n  useEffect(() => {\n    decideButtonState(isValid);\n  }, [errors, isValid]);\n\n  const onSubmit = (data, isValid) => {\n    if (isValid) {\n      dispatch(addVaccinationInfo(data));\n      push(\"/advices\");\n    }\n  };\n\n  const isVaccinated = watch(\"isVaccinated\");\n  const vaccinationStage = watch(\"vaccinationStage\");\n  const whatAreUWaiting = watch(\"whatAreUWaiting\");\n\n  return (\n    <div className=\"identificationParent covidQuestions\">\n      <Navbar text=\"COVID\" pages=\"3/4\" />\n      <div className=\"identification covidIdentification\">\n        <form onSubmit={handleSubmit(onSubmit)} id=\"vaccinationForm\">\n          <RadioButtonsGroup\n            question={questions.vaccination}\n            register={register}\n            registerName=\"isVaccinated\"\n            validations={validations.requiredValidation}\n          />\n          {errors.isVaccinated && (\n            <span className=\"errorNotif\">{errors.isVaccinated.message}</span>\n          )}\n          {isVaccinated === \"კი\" ? (\n            <RadioButtonsGroup\n              question={questions.vaccination.ifYes}\n              register={register}\n              registerName=\"vaccinationStage\"\n              validations={validations.requiredValidation}\n            />\n          ) : isVaccinated === \"არა\" ? (\n            <RadioButtonsGroup\n              question={questions.vaccination.ifNo}\n              register={register}\n              registerName=\"whatAreUWaiting\"\n              validations={validations.requiredValidation}\n            />\n          ) : null}\n          {errors.vaccinationStage && (\n            <span className=\"errorNotif\">\n              {errors.vaccinationStage.message}\n            </span>\n          )}\n          {errors.whatAreUWaiting && (\n            <span className=\"errorNotif\">{errors.whatAreUWaiting.message}</span>\n          )}\n\n          {isVaccinated === \"კი\" &&\n            vaccinationStage ===\n              \"პირველი დოზა და არ დავრეგისტრირებულვარ მეორეზე\" && (\n              <h5 className=\"toLeftH5\">\n                რომ აღარ გადადო, ბარემ ახლავე დარეგისტრირდი\n                <a href=\"https://booking.moh.gov.ge/\">\n                  https://booking.moh.gov.ge/\n                </a>\n              </h5>\n            )}\n          {isVaccinated === \"არა\" && whatAreUWaiting === \"არ ვგეგმავ\" ? (\n            <h5 className=\"toLeftH5\">\n              <a href=\"https://booking.moh.gov.ge/\">\n                👉 https://booking.moh.gov.ge/\n              </a>\n            </h5>\n          ) : whatAreUWaiting === \"გადატანილი მაქვს და ვგეგმავ აცრას\" ? (\n            <h5 className=\"toLeftH5\">\n              ახალი პროტოკოლით კოვიდის გადატანიდან 1 თვის შემდეგ შეგიძლიათ\n              ვაქცინის გაკეთება.\n              <br />\n              <div style={{ marginTop: \"1rem\" }}></div>\n              👉 რეგისტრაციის ლინკი -\n              <a\n                href=\"https://booking.moh.gov.ge/\"\n                style={{ marginLeft: \".4rem\" }}\n              >\n                https://booking.moh.gov.ge/\n              </a>\n            </h5>\n          ) : null}\n        </form>\n        <img src={doctorImg} alt=\"doctorImage\" className=\"doctorImg\"></img>\n      </div>\n      <div className=\"buttonsParent\">\n        <NavigationButton direction=\"left\" disabled={false} path=\"/questions\" />\n        <NavigationButton\n          direction=\"right\"\n          disabled={disabled}\n          formId=\"vaccinationForm\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Vaccination;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Final() {\n  return (\n    <div className=\"final\">\n      <div>\n        <h1>THANKS</h1>\n        <p>🤘მადლობა რომ დაგვითმე დრო და შეავსე კითხვარი</p>\n        <Link to=\"/result\">ნახე შენი პასუხები</Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Final;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst dictionary = {\n  name: \"სახელი\",\n  surname: \"გვარი\",\n  mail: \"მეილი\",\n  hadCovid: \"გქონდა კოვიდი?\",\n  antisxeulebi: \"გაიკეთე ანტისხეულების ტესტი?\",\n  antibodiesDate: \"ანტისხეულების გაკეთების თარიღი\",\n  antiBodies: \"ანტისხეულების რაოდენობა\",\n  physicalMeetups: \"რას ფიქრობ ფიზიკურად შეკრებებზე?\",\n  currentOpinion: \"ახლანდელ გარემოზე რას ფიქრობ?\",\n  onlineMeetups: \"არაფორმალური ონლაინ შეხვედრები კვირაში რამდენჯერ უნდა იყოს?\",\n  workInOffice: \"ოფისში რამდენი დღე იმუშავებდი კვირაში?\",\n};\n\nfunction Result() {\n  const state = useSelector(state => state.user);\n\n  return (\n    <div className=\"result\">\n      <div>\n        {state &&\n          Object.keys(state).map(item => {\n            return Object.keys(state[item]).map((field, index) => {\n              return (\n                state[item][field] && (\n                  <div key={index}>\n                    <p>\n                      <b>{dictionary[field]}</b>\n                    </p>\n                    <p>\n                      <i>{state[item][field]}</i>\n                    </p>\n                  </div>\n                )\n              );\n            });\n          })}\n      </div>\n    </div>\n  );\n}\n\nexport default Result;\n","import { Switch, Route } from \"react-router-dom\";\n\nimport Identification from \"./components/Identification\";\nimport Start from \"./components/Start\";\nimport Covid from \"./components/Covid\";\nimport Advices from \"./components/Advices\";\nimport Vaccination from \"./components/Vaccination\";\nimport Final from \"./components/Final\";\nimport Result from \"./components/Result\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/identification\">\n          <Identification />\n        </Route>\n        <Route path=\"/questions\">\n          <Covid />\n        </Route>\n        <Route path=\"/vaccination\">\n          <Vaccination />\n        </Route>\n        <Route path=\"/advices\">\n          <Advices />\n        </Route>\n        <Route path=\"/final\">\n          <Final />\n        </Route>\n        <Route path=\"/result\">\n          <Result />\n        </Route>\n        <Route path=\"/\">\n          <Start />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\n// import { persistStore } from \"redux-persist\";\n// import { PersistGate } from \"redux-persist/integration/react\";\n\nimport store from \"./state/store\";\nimport App from \"./App\";\n\n// const persistor = persistStore(store);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        {/* <PersistGate loading={null} persistor={persistor}> */}\n        <App />\n        {/* </PersistGate> */}\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}